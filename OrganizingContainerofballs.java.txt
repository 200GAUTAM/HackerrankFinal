import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the organizingContainers function below.
    static String organizingContainers(int[][] container) {
            int[] balls = new int[container.length];
            int[] cons = new int[container.length];
            int n = container.length;
            for(int i = 0; i<n; i++ ){
                int sum = 0;
                for(int j = 0; j<n; j++){
                    //container[i]][j] =
                    sum = sum + container[i][j]; 
                }
                cons[i] = sum;
            }

            for(int i = 0; i<n; i++ ){
                int sum = 0;
                for(int j = 0; j<n; j++){
                    //container[i]][j] =
                    sum = sum + container[j][i]; 
                }
                balls[i] = sum;
            }
            Arrays.sort(balls);
            Arrays.sort(cons);
           // for(int i = 0; i<n; i++) {
             //   if(balls[i] != cons[i]){
                 if(Arrays.equals(cons,balls))
                    return "Possible";
                else
                    return "Impossible";
                    
                //}
            //}
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            int n = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int[][] container = new int[n][n];

            for (int i = 0; i < n; i++) {
                String[] containerRowItems = scanner.nextLine().split(" ");
                scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

                for (int j = 0; j < n; j++) {
                    int containerItem = Integer.parseInt(containerRowItems[j]);
                    container[i][j] = containerItem;
                }
            }

            String result = organizingContainers(container);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
